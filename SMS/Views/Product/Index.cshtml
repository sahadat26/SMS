@model IEnumerable<SMS.Models.Product>
@{
    ViewBag.Title = "List of Product";
}

<div class="container-fluid">

    <div class="row">
        <div class="col-lg-12">
            <h3 style="color:royalblue;">
                <i class="fa fa-fw fa-rub"></i> List of Product &nbsp;&nbsp;
                <a href="@Url.Content("~/Product/AddProduct/")" class="btn btn-sm btn-primary" title="New Product">
                    <i class="fa fa-fw fa-plus-circle"></i>
                    New Product
                </a>
            </h3>
            @*<div class="panel panel-primary">
                <div class="panel-body">*@
            @{

                if (ViewBag.Info != null)
                {
                    <!-- Message OK -->
                    <div class="alert alert-info">
                        <a href="#" class="close" data-dismiss="alert">&times;</a>
                        <strong>@ViewBag.Info</strong>
                    </div>
		            <!-- End Message OK -->
                }
                else if (ViewBag.Error != null)
                {
		            <!-- Message Error -->
                    <div class="alert alert-danger">
                        <a href="#" class="close" data-dismiss="alert">&times;</a>
                        <p><strong>@ViewBag.Error</strong></p>
                    </div>
		            <!-- End Message Error -->
                }
            }
            @using GridMvc.Html

            @Html.Grid(Model).Columns(
col =>
{
    col.Add(i => i.ProductID).Titled("ID").Sortable(true);
    col.Add(i => i.ProductName).Titled("Product Name").Filterable(true).Sortable(true);
    col.Add(i => i.Prefix).Titled("Prefix").Filterable(true).Sortable(true);
    col.Add(i => i.ProductCategory.CategoryName).Titled("Product Category").Filterable(true).Sortable(true);
    col.Add(i => i.Attribute).Titled("Properties").Filterable(true).Sortable(true);
    col.Add().Titled("Action").Encoded(false).Sanitized(false).RenderValueAs(m =>
        @<text>
            <a href="@Url.Content("~/Product/AddProductProperty?ProductID=" + m.ProductID)" title="Properties"><i class="fa fa-fw fa-list"></i></a>
            <a href="@Url.Content("~/Product/EditProduct?ProductID=" + m.ProductID)" title="Edit"><i class="fa fa-fw fa-pencil"></i></a>

        </text>
        );
}
      ).WithPaging(15, 20)

        </div>
    </div>
</div>
@*</div>
    </div>*@
@section scripts
{
    @Scripts.Render("~/bundles/gridmvc")
    <script type="text/javascript">
        function ResetPasswordMsg(e) {
            alert(e);
        }
    </script>
}



