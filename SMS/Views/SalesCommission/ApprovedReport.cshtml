@model IEnumerable<SMS.Models.SC_ASEApprovedData>
@{
    ViewBag.Title = "ApprovedReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <h3 style="color:royalblue;">
               
                <i class="fa fa-fw fa-bars"></i> Approval Report &nbsp;&nbsp;

                <form action="/SalesCommission/ApprovedReport" class="form-inline" style="float:right;" id="frm">


                    <div class="form-group">
                        <div class="input-group date">
                            @Html.TextBox("Start", (string)ViewBag.startDate,
                                    new
                                    {
                                        @readonly = "true",
                                        @class = "form-control input-sm",
                                        @data_provide = "datepicker",
                                        @data_date_autoclose = "true",
                                        @style = "cursor:pointer;"
                                    })
                            <div class="input-group-addon">
                                <span class="fa fa-fw fa-calendar"></span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-group date">
                            @Html.TextBox("End", (string)ViewBag.endDate,
                                    new
                                    {
                                        @readonly = "true",
                                        @class = "form-control input-sm",
                                        @data_provide = "datepicker",
                                        @data_date_autoclose = "true",
                                        @style = "cursor:pointer;"
                                    })
                            <div class="input-group-addon">
                                <span class="fa fa-fw fa-calendar"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.DropDownListFor(t => t.ASEID, ViewBag.ASE as SelectList, "Select ASE", new { @class = "form-control input-sm", @style = "width:200px" })
                @Html.ValidationMessageFor(t => t.ASEID, null, new { @class = "text-danger" })*@


                        @Html.DropDownList("ASEID", ViewBag.ASE as SelectList, "Select ASE", new { @class = "js-example-basic-single form-control input-sm", @style = "width:200px" })

                    </div>


                    <div class="form-group">

                        @*<input type="text" id="q" name="q" class="form-control input-sm"
                placeholder="Search Keywords" value="@ViewBag.SearchText" />*@
                        <button id="btnSearch" type="submit" class="btn btn-sm btn-success">
                            <i class="fa fa-fw fa-search"></i> Search
                        </button>


                        @*<button data-loading-text="Syncing......." type="button" class="btn btn-sm btn-warning" id="btnSync">
                    <i class="fa fa-fw fa-refresh"></i>Sync Collection
                </button>*@
                    </div>





                </form>
            </h3>

            @using GridMvc.Html

            <div class="col-lg-12" style="overflow:scroll;">

                @Html.Grid(Model).Columns(
                    col =>
                    {

                        col.Add(i => i.UserName).Titled("User Name").Sortable(true).Filterable(true);
                        col.Add(i => i.Name).Titled("Full Name").Sortable(true).Filterable(true);
                        col.Add(i => i.totalCommisionCalculation).Titled("Total Commission").Sortable(true).Filterable(true);
                        col.Add(i => i.BasicSalary).Titled("Basic Salary").Sortable(true).Filterable(true);

                        col.Add(i => i.ConveyanceAllowance).Titled("Conv. Allowance").Sortable(true).Filterable(true);
                        col.Add(i => i.FoodAllowance).Titled("Food Allowance").Sortable(true).Filterable(true);
                        col.Add(i => i.MobileAllowance).Titled("Mobile Allowance").Sortable(true).Filterable(true);
                        col.Add(i => i.AdditionalAllowance).Titled("Additional Allowance").Sortable(true).Filterable(true);
                        col.Add(i => i.DeductionAllowance).Titled("Deduction Allowance").Sortable(true).Filterable(true);
                        col.Add(i => i.totalBasicAllowance).Titled("Total").Sortable(true).Filterable(true);

                        col.Add(i => i.grandTotal).Titled("Grand Total").Sortable(true).Filterable(true);
                        col.Add(i => i.statusApp).Titled("Status").Sortable(true).Filterable(true);
                        
                   

                    }
 ).WithPaging(15, 20)
            </div>





        </div>
    </div>
</div>
