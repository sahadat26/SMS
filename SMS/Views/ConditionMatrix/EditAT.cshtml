@model SMS.Models.SC_ASETarget

@{
    ViewBag.Title = "Update ASE Target";
}

<div class="container-fluid">


    <div class="row">
        <div class="col-lg-12">
            <h3 style="color:royalblue;"><i class="fa fa-fw fa-bars"></i> Update ASE Target</h3>
            <div class="panel panel-primary">

                <div class="panel-body">
                    <br />
                    @{

                        if (ViewBag.Info != null)
                        {
                    <!-- Message OK -->
                            <div class="alert alert-info">
                                <a href="#" class="close" data-dismiss="alert">&times;</a>
                                <strong>@ViewBag.Info</strong>
                            </div>
		            <!-- End Message OK -->
                        }
                        else if (ViewBag.Error != null)
                        {
		            <!-- Message Error -->
                            <div class="alert alert-danger">
                                <a href="#" class="close" data-dismiss="alert">&times;</a>
                                <p><strong>@ViewBag.Error</strong></p>
                            </div>
		            <!-- End Message Error -->
                        }
                    }
                    @using (Html.BeginForm("EditAT", "ConditionMatrix", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        @Html.HiddenFor(m => m.BU)
                        @Html.HiddenFor(m => m.ID)
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ASEUID, new { @class = "control-label" })
                                @Html.DropDownListFor(t => t.ASEUID, ViewBag.ASE as SelectList, string.Empty, new { @class = "form-control" })
                                @Html.ValidationMessageFor(t => t.ASEUID, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.TargetType, new { @class = "control-label" })
                                @Html.EnumDropDownListFor(t => t.TargetType, new { @class = "form-control" })
                                @Html.ValidationMessageFor(t => t.TargetType, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.MonthYearName, new { @class = "control-label" })
                                @*@Html.TextBoxFor(t => t.MonthYearName, new { @class = "form-control" })*@
                                @Html.EnumDropDownListFor(t => t.MonthYearName, new { @class = "form-control" })
                                
                                @Html.ValidationMessageFor(t => t.MonthYearName, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.Year, new { @class = "control-label" })
                                @Html.TextBoxFor(t => t.Year, new { @class = "form-control" })

                                @Html.ValidationMessageFor(t => t.Year, null, new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.StartDate, new { @class = "control-label" })
                                <div class="input-group date" style="width:90%;">
                                    @Html.TextBox("StartDate", Model.StartDate.ToShortDateString(),
                                                new
                                                {
                                                    @readonly = "true",
                                                    @class = "form-control",
                                                    @data_provide = "datepicker",
                                                    @data_date_autoclose = "true",
                                                    @data_date_format = "mm/dd/yyyy",
                                                    @style = "cursor:pointer"

                                                })
                                    <div class="input-group-addon">
                                        <span class="fa fa-fw fa-calendar"></span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(t => t.StartDate, null, new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.EndDate, new { @class = "control-label" })
                                <div class="input-group date" style="width:90%;">
                                    @Html.TextBox("EndDate", Model.EndDate.ToShortDateString(),
                                                new
                                                {
                                                    @readonly = "true",
                                                    @class = "form-control",
                                                    @data_provide = "datepicker",
                                                    @data_date_autoclose = "true",
                                                    @data_date_format = "mm/dd/yyyy",
                                                    @style = "cursor:pointer"

                                                })
                                    <div class="input-group-addon">
                                        <span class="fa fa-fw fa-calendar"></span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(t => t.EndDate, null, new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.TargetAmount, new { @class = "control-label" })
                                @Html.TextBoxFor(t => t.TargetAmount, new { @class = "form-control" })
                                @Html.ValidationMessageFor(t => t.TargetAmount, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-3">

                            <div class="form-group">
                                @Html.LabelFor(m => m.AchievedPerc, new { @class = "control-label" })
                                @Html.TextBoxFor(t => t.AchievedPerc, new { @class = "form-control" })
                                @Html.ValidationMessageFor(t => t.AchievedPerc, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.AchievedAmount, new { @class = "control-label" })
                                @Html.TextBoxFor(t => t.AchievedAmount, new { @class = "form-control" })
                                @Html.ValidationMessageFor(t => t.AchievedAmount, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-2">
                            
                            <div class="form-group">
                                @Html.LabelFor(m => m.NewContract, new { @class = "control-label" })
                                @Html.TextBoxFor(t => t.NewContract, new { @class = "form-control" })
                                @Html.ValidationMessageFor(t => t.NewContract, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.RenewContract, new { @class = "control-label" })
                                @Html.TextBoxFor(t => t.RenewContract, new { @class = "form-control" })
                                @Html.ValidationMessageFor(t => t.RenewContract, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <p style="text-align:center;">
                                <button type="submit" class="btn btn-primary" id="btnSubmit">
                                    <i class="fa fa-fw fa-save"></i> Update Target
                                </button>
                                <a href="@Url.Content("~/ConditionMatrix/IndexAT")" class="btn btn-success">
                                    <i class="fa fa-fw fa-backward"></i> Back to List
                                </a>
                            </p>
                        </div>

                    }


                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/select2")

    <script type="text/javascript">
        //$("#ASEUID").select2();
    </script>
}


