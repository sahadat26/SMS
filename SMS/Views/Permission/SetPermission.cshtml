@model IEnumerable<SMS.Models.Permission>

@{
    ViewBag.Title = "Set User Permission";
    int userid = ViewBag.UserID;
    SMS.Models.SMSContext db=new SMS.Models.SMSContext();
    var user = db.Users.Find(userid)??new SMS.Models.User();
}

<div class="container-fluid">

    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <i class="fa fa-fw fa-cogs"></i>
                    Set Permission for @user.FullName
                </div>
                <div class="panel-body">
                    @{

                        if (ViewBag.Info != null)
                        {
                    <!-- Message OK -->
                            <div class="alert alert-info">
                                <a href="#" class="close" data-dismiss="alert">&times;</a>
                                <strong>@ViewBag.Info</strong>
                            </div>
		            <!-- End Message OK -->
                        }
                        else if (ViewBag.Error != null)
                        {
		            <!-- Message Error -->
                            <div class="alert alert-danger">
                                <a href="#" class="close" data-dismiss="alert">&times;</a>
                                <p><strong>@ViewBag.Error</strong></p>
                            </div>
		            <!-- End Message Error -->
                        }
                    }
                    @using GridMvc.Html
                    @using (Html.BeginForm())
                    {
                        @Html.ValidationSummary(true)
                        @Html.Hidden("UserID", userid)



                        @Html.Grid(Model).Columns(
col =>
{
    col.Add().Sanitized(false).Encoded(false).RenderValueAs(r =>
        @<text>
            @Html.CheckBox("Permission_" + r.RoleID, r.Status)
        </text>
        );
    col.Add(i => i.Roles.Name).Titled("Role Name");
    col.Add(i => i.Roles.Description).Titled("Operation");
    col.Add(i => i.Roles.ModuleName).Titled("Type");
}
             )

                        @*<table class="data display datatable" style="width:100%;">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th style="text-align:left;">Name</th>
                                        <th style="text-align:left;">Description</th>
                                        <th>
                                            Type
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var r in Model)
                                    {

                                        <tr class="odd">
                                            <td>
                                                @Html.CheckBox("Permission_" + r.RoleID, r.Status)
                                            </td>
                                            <td style="text-align:left;">@Html.DisplayFor(val => r.Roles.Name)</td>
                                            <td style="text-align:left;">@Html.DisplayFor(val => r.Roles.Description)</td>
                                            <td>@Html.DisplayFor(val => r.Roles.ModuleName)</td>
                                        </tr>

                                    }
                                </tbody>
                            </table>*@
                        <p style="text-align:center;">
                            <br />
                            <button type="submit" class="btn btn-primary" id="btnSubmit">
                                <i class="fa fa-fw fa-save"></i> Update User Permission
                            </button>
                        </p>
                    }
                </div>
            </div>
        </div>
    </div>

</div>
@section scripts
{
@Scripts.Render("~/bundles/gridmvc")
}
